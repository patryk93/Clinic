<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
             http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
             version="2.1">
    <persistence-unit name="clinicPersistenceUnit">
        <properties>
            <property name="javax.persistence.jdbc.url"
                      value="jdbc:mysql://localhost:3306/clinic?useSSL=false&amp;serverTimezone=UTC"/>
            <property name="javax.persistence.jdbc.user" value="root"/>
            <property name="javax.persistence.jdbc.password" value="coderslab"/>
            <property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver"/>
<!--            poniżej ustawiamy co ma się stać po uruchomieniu aplikacji. Dostępne opcje value: -->
<!--            create - tworzy tabele na podstawie adnotacji encji, nie nadpisuje zmian-->
<!--            none - nie wykonuje żadnych operacji-->
<!--            drop-and-create - usunie a następnie utworzy-->
<!--            drop - usunie elementy bazy danych zgodne z adnotacjami-->
<!--                        <property name="javax.persistence.schema-generation.database.action"-->
<!--                                  value="drop"/>-->
<!--            Poniżej możemy dodać skrypt dodający dane do naszej bazy danych:-->
<!--            <property name="javax.persistence.sql-load-script-source"-->
<!--                      value="META-INF/sql/data.sql" />-->
            <property name="hibernate.hbm2ddl.auto" value="update"/>
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL57Dialect" />
            <property name="hibernate.connection.characterEncoding" value="utf8" />
        </properties>
    </persistence-unit>
</persistence>